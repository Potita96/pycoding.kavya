//any()
This expression returns True if any element of the iterable is true.
If the iterable is empty, it will return False.

Code

>>> any([1>0,1==0,1<0])
True
>>> any([1<0,2<1,3<2])
False
all()
This expression returns True if all of the elements of the iterable are true. If the iterable is empty, it will return True.

Code

>>> all(['a'<'b','b'<'c'])
True
>>> all(['a'<'b','c'<'b'])
False
Task

You are given a space separated list of integers. If all the integers are positive, then you need to check if any integer is a palindromic integer.//










CODE:
def isPositive(i):
    if i > 0:
        return True
    return False

def isPalindrome(i):
    if int(str(i)[::-1]) is i:
        return True
    return False

N = int(input())
storage = map(int, input().split())
storage = sorted(storage)

if all([isPositive(i) for i in storage]):
    if any([isPalindrome(i) for i in storage]):
        print("True")
    else:
        print("False")
else:
    print("False")













Input (stdin)
5
12 9 61 5 14
Expected Output
True