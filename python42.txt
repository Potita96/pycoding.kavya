//A valid email address meets the following cr>iteria:

>It's composed of a username, domain name, and extension assembled in this format: 
username@domain.extension
>The username starts with an English alphabetical character, and any subsequent characters consist of one or more of the following: alphanumeric characters, -,., and _.
>The domain and extension contain only English alphabetical characters.
>The extension is 1,2,or3 characters in length.
Given n pairs of names and email addresses as input, print each name and email address pair having a valid email address on a new line.

Hint: Try using Email.utils() to complete this challenge. 
For example, this code:

import email.utils
print email.utils.parseaddr('DOSHI <DOSHI@hackerrank.com>')
print email.utils.formataddr(('DOSHI', 'DOSHI@hackerrank.com'))

produces this output:

('DOSHI', 'DOSHI@hackerrank.com')
DOSHI <DOSHI@hackerrank.com>//





CODE:
import re

N = int(input())

for i in range(N):
    name, email = input().split()
    pattern="<[a-z][a-zA-Z0-9\-\.\_]+@[a-zA-Z]+\.[a-zA-Z]{1,3}>"
    if bool(re.match(pattern, email)):
        print(name,email)



Input (stdin)
2
DEXTER <dexter@hotmail.com>
VIRUS <virus!@variable.:p>
Expected Output
DEXTER <dexter@hotmail.com>






